Sub Saldenbestatigung()
    Dim SapGuiAuto As Object
    Dim SAPApp As Object
    Dim SAPCon As Object
    Dim session As Object
    Dim SAPGuiSession As Object
    Set SapGuiAuto = GetObject("SAPGUI")
    Set SAPApp = SapGuiAuto.GetScriptingEngine
    Set SAPCon = SAPApp.Children(0)
    Set session = SAPCon.Children(0)

Dim BP As String
Dim CompanyCode As String

     Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("OP")

BP = ActiveWorkbook.ActiveSheet.Range("B1").Value
CompanyCode = ActiveWorkbook.ActiveSheet.Range("B2").Value
'clearing my sheeet
ws.Range("A3:O20000").ClearContents
'reset back to menu
ActiveWorkbook.ActiveSheet.Range("H1").Value = "Processing..."
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press

session.findById("wnd[0]/tbar[0]/okcd").Text = "FPL9"
session.findById("wnd[0]/tbar[0]/btn[0]").press
session.findById("wnd[0]/usr/btnPUSH_RGPA").press
session.findById("wnd[1]/tbar[0]/btn[16]").press
session.findById("wnd[1]/tbar[0]/btn[8]").press
session.findById("wnd[0]/usr/ctxtFKKL1-GPART").Text = ""
session.findById("wnd[0]/usr/ctxtFKKL1-VKONT").Text = ""
session.findById("wnd[0]/usr/ctxtFKKL1-VTREF").Text = ""
session.findById("wnd[0]/usr/ctxtFKKL1-BUKRS").Text = ""
session.findById("wnd[0]/usr/ctxtFKKL1-RATPL").Text = ""
session.findById("wnd[0]/usr/txtFKKL1-SAMMR").Text = ""
session.findById("wnd[0]/usr/txtFKKL1-XBLNR").Text = ""
session.findById("wnd[0]/usr/txtFKKL1-OPORD").Text = ""
session.findById("wnd[0]/usr/ctxtFKKL1-ARCDT").Text = ""
session.findById("wnd[0]/usr/ctxtFKKL1-GPART").Text = BP
session.findById("wnd[0]/usr/ctxtFKKL1-BUKRS").Text = CompanyCode
session.findById("wnd[0]/usr/ctxtFKKL1-VKONT").Text = ""
session.findById("wnd[0]/usr/ctxtFKKL1-VTREF").Text = ""

session.findById("wnd[0]/usr/cmbFKKL1-LSTYP").Key = "OP"
On Error GoTo not_found
session.findById("wnd[0]/tbar[0]/btn[0]").press
session.findById("wnd[0]/mbar/menu[3]/menu[9]").Select
session.findById("wnd[0]/tbar[1]/btn[33]").press
On Error GoTo 0
session.findById("wnd[1]/usr/subSUB_CONFIGURATION:SAPLSALV_CUL_LAYOUT_CHOOSE:0500/cntlD500_CONTAINER/shellcont/shell").contextMenu
session.findById("wnd[1]/usr/subSUB_CONFIGURATION:SAPLSALV_CUL_LAYOUT_CHOOSE:0500/cntlD500_CONTAINER/shellcont/shell").selectContextMenuItem "&FILTER"
session.findById("wnd[2]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").Text = "/DACH R"
session.findById("wnd[2]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").caretPosition = 6
session.findById("wnd[2]/tbar[0]/btn[0]").press
session.findById("wnd[1]/usr/subSUB_CONFIGURATION:SAPLSALV_CUL_LAYOUT_CHOOSE:0500/cntlD500_CONTAINER/shellcont/shell").selectedRows = "0"
session.findById("wnd[1]/usr/subSUB_CONFIGURATION:SAPLSALV_CUL_LAYOUT_CHOOSE:0500/cntlD500_CONTAINER/shellcont/shell").clickCurrentCell
session.findById("wnd[0]/usr/cntlGRID1/shellcont/shell/shellcont[1]/shell").contextMenu
session.findById("wnd[0]/usr/cntlGRID1/shellcont/shell/shellcont[1]/shell").selectContextMenuItem "&XXL"
session.findById("wnd[1]/tbar[0]/btn[20]").press
session.findById("wnd[1]/tbar[0]/btn[0]").press

' Record the initial number of open workbooks
    initialWorkbookCount = Application.Workbooks.Count
    
    ' Set the maximum wait time (10 seconds)
    maxWaitTime = 100
    startTime = Timer
    
    ' Wait until a new workbook is added or the time limit is reached
    Do While Application.Workbooks.Count <= initialWorkbookCount
        DoEvents  ' Allow Excel to process other events
        If Timer > startTime + maxWaitTime Then
            MsgBox "New workbook did not open within the expected time.", vbExclamation
            Exit Sub
        End If
    Loop
    
    ' The new workbook is now the last one added
    Set NewWorkbook = Application.Workbooks(Application.Workbooks.Count)
    ' Activate the new workbook
    NewWorkbook.Activate
    
    Dim rng As Range
    Dim lastRow As Long
    Dim i As Long
    
    ' Set the worksheet to the active sheet
    Set ws = ActiveSheet
    
    ' Find the last row in column A
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    ' Loop through each row from the bottom to the top
    For i = lastRow To 1 Step -1
        ' Check if the cell in column A is empty
        If ws.Cells(i, 1).Value = "" Then
            ' Delete the entire row
            ws.Rows(i).Delete
        End If
        
    Next i
    
    
    
    
 ' Step 2: Delete specified columns based on headers
    Dim headersToDelete As Variant
    headersToDelete = Array( _
        "Traffic Light", _
        "Description", _
        "Closed Disputes Exists", _
        "Clearing Date", _
        "Clearing Document", _
        "Substitute Document", _
        "Sales Document", _
        "Corresp. Recipient", _
        "Still open")

    ' Get the last column in row 1
    Dim lastCol As Long
    lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column

    ' Loop through each column from the last to the first
    Dim col As Long
    For col = lastCol To 1 Step -1
        ' Check if the header of the current column matches any of the headers to delete
        If Not IsError(Application.Match(ws.Cells(1, col).Value, headersToDelete, 0)) Then
            ' Delete the column
            ws.Columns(col).Delete
                     
        End If
    Next col

 ' Set the "OP liste.xlsm" workbook and the "OP" sheet
    Set opWorkbook = ThisWorkbook
    Set opSheet = opWorkbook.Sheets("OP")
    
     ' Set the last active sheet
    Set lastActiveSheet = ActiveSheet
    
        ' Identify the last used range in the last active sheet
    Set lastUsedRange = lastActiveSheet.UsedRange
    
    ' Copy the last used range from the last active sheet
    lastUsedRange.Copy
    
    ' Paste the copied range into cell A3 on the "OP" sheet
    opSheet.Range("A3").PasteSpecial Paste:=xlPasteValues
    
    ' Clear the clipboard to remove the copied data
    Application.CutCopyMode = False
    
    ' Close the last active sheet without saving changes
    lastActiveSheet.Parent.Close SaveChanges:=False
    
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press

    Dim sourceRange As Range
    Dim fillRange As Range

    Range("O4").Select
ActiveCell.FormulaR1C1 = "=SUMIFS(C[-7],C[-11],RC[-11])"
    Range("O4").Select
     lastRow = Cells(Rows.Count, "A").End(xlUp).Row
         Set sourceRange = Selection
    Set fillRange = sourceRange.Resize(lastRow - sourceRange.Row + 1)
    On Error GoTo Singlepass
        
     sourceRange.AutoFill Destination:=fillRange
     On Error GoTo 0
     
     Calculate
    Range("H3").Select
    Selection.Copy
    Range("O3").Select
    ActiveSheet.Paste
    Columns("O:O").Select
    Selection.Copy
    Columns("H:H").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Columns("O:O").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft
    ActiveSheet.Range("$A$3:$O$9999").RemoveDuplicates Columns:=4, Header:=xlYes
    'number formatting
ActiveWorkbook.ActiveSheet.Range("F4", "G50000").NumberFormat = "dd.mm.yyyy"
ActiveWorkbook.ActiveSheet.Range("I4", "I50000").NumberFormat = "_-* #,##0.00 _K_c_-;-* #,##0.00 _K_c_-;_-* ""-""?? _K_c_-;_-@_-"
'condi formatting
    Columns("H:J").Select
    Cells.FormatConditions.Delete
    Columns("J:J").Select
    Selection.FormatConditions.AddColorScale ColorScaleType:=3
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    Selection.FormatConditions(1).ColorScaleCriteria(1).Type = _
        xlConditionValueLowestValue
    With Selection.FormatConditions(1).ColorScaleCriteria(1).FormatColor
        .Color = 5287936
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).ColorScaleCriteria(2).Type = _
        xlConditionValueNumber
    Selection.FormatConditions(1).ColorScaleCriteria(2).Value = 0
    With Selection.FormatConditions(1).ColorScaleCriteria(2).FormatColor
        .Color = 8711167
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).ColorScaleCriteria(3).Type = _
        xlConditionValueHighestValue
    With Selection.FormatConditions(1).ColorScaleCriteria(3).FormatColor
        .Color = 255
        .TintAndShade = 0
    End With
    GoTo Boop
not_found:
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press

    MsgBox "No open entries found", vbInformation, "Message"
Boop:
Singlepass:
Columns("O:O").ClearContents
    Range("H1").ClearContents
    
    End Sub

Sub L()
Range("F4", "G50000").NumberFormat = "dd.mm.yyyy"
Range("I4", "I50000").NumberFormat = "_-* #,##0.00 _K_c_-;-* #,##0.00 _K_c_-;_-* ""-""?? _K_c_-;_-@_-"
End Sub

Sub Clearcont()
Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("OP")
'clearing my sheeet
ws.Range("A3:O20000").ClearContents
End Sub


Sub Macro4()
'
' Macro4 Macro
'

'
    Sheets("Email").Select
    Sheets("datval").Visible = True
    Sheets("datval").Select
    ActiveWindow.SelectedSheets.Visible = False
End Sub
Sub Macro5()
'
' Macro5 Macro
'

'
    Range("B7:C2000").Select
    Selection.ClearContents
End Sub


Sub getmailinglist()
'in SAP to download the email list


    Dim SapGuiAuto As Object
    Dim SAPApp As Object
    Dim SAPCon As Object
    Dim session As Object
    Dim SAPGuiSession As Object
    Set SapGuiAuto = GetObject("SAPGUI")
    Set SAPApp = SapGuiAuto.GetScriptingEngine
    Set SAPCon = SAPApp.Children(0)
    Set session = SAPCon.Children(0)

Dim BP As String
Dim CompanyCode As String

     Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("OP")

BP = ActiveWorkbook.Sheets("OP").Range("B1").Value
CompanyCode = ActiveWorkbook.Sheets("OP").Range("B2").Value

 Sheets("datval").Visible = True
    Sheets("datval").Select
        Range("B7:C2000").Select
    Selection.ClearContents
 Sheets("datval").Visible = False
 
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press

session.findById("wnd[0]/tbar[0]/okcd").Text = "ZEBILLREPORT"
session.findById("wnd[0]/tbar[0]/btn[0]").press
session.findById("wnd[0]/usr/ctxtSO_GPART-LOW").Text = BP
session.findById("wnd[0]/usr/ctxtSO_VKORG-LOW").Text = ""
session.findById("wnd[0]/usr/ctxtSO_BUKRS-LOW").Text = "0002"
session.findById("wnd[0]/usr/txtSO_EMAIL-LOW").Text = ""
session.findById("wnd[0]/usr/ctxtSO_PARVW-LOW").Text = "Y0"
session.findById("wnd[0]/usr/ctxtSO_PAPER-LOW").Text = ""
session.findById("wnd[0]/usr/ctxtSO_EMPDF-LOW").Text = ""
session.findById("wnd[0]/usr/ctxtSO_PORTA-LOW").Text = ""
session.findById("wnd[0]/usr/ctxtSO_OTEDI-LOW").Text = ""
session.findById("wnd[0]/usr/ctxtSO_EDOCS-LOW").Text = ""
session.findById("wnd[0]/usr/ctxtSO_COUNT-LOW").Text = ""
session.findById("wnd[0]/usr/ctxtSO_COUNT-LOW").SetFocus
session.findById("wnd[0]/usr/ctxtSO_COUNT-LOW").caretPosition = 0
session.findById("wnd[0]/tbar[1]/btn[8]").press
session.findById("wnd[0]/tbar[1]/btn[32]").press
session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_CONFIGURATION:SAPLSALV_CUL_COLUMN_SELECTION:0620/cntlCONTAINER2_LAYO/shellcont/shell").setCurrentCell -1, ""
session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_CONFIGURATION:SAPLSALV_CUL_COLUMN_SELECTION:0620/cntlCONTAINER2_LAYO/shellcont/shell").SelectAll
session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_CONFIGURATION:SAPLSALV_CUL_COLUMN_SELECTION:0620/btnAPP_FL_SING").press
session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_CONFIGURATION:SAPLSALV_CUL_COLUMN_SELECTION:0620/cntlCONTAINER1_LAYO/shellcont/shell").firstVisibleRow = 5
session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_CONFIGURATION:SAPLSALV_CUL_COLUMN_SELECTION:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "e-mail*"
session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").SetFocus
session.findById("wnd[2]/tbar[0]/btn[0]").press
session.findById("wnd[2]/tbar[0]/btn[12]").press
session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_CONFIGURATION:SAPLSALV_CUL_COLUMN_SELECTION:0620/btnAPP_WL_SING").press
session.findById("wnd[1]/tbar[0]/btn[0]").press
session.findById("wnd[0]/usr/cntlGRID1/shellcont/shell").selectedRows = "0"
session.findById("wnd[0]/usr/cntlGRID1/shellcont/shell").contextMenu

session.findById("wnd[0]/usr/cntlGRID1/shellcont/shell").contextMenu
session.findById("wnd[0]/usr/cntlGRID1/shellcont/shell").selectContextMenuItem "&XXL"
session.findById("wnd[1]/tbar[0]/btn[20]").press
session.findById("wnd[1]/tbar[0]/btn[0]").press
'


' Record the initial number of open workbooks
    initialWorkbookCount = Application.Workbooks.Count
    
    ' Set the maximum wait time (10 seconds)
    maxWaitTime = 100
    startTime = Timer
    
    ' Wait until a new workbook is added or the time limit is reached
    Do While Application.Workbooks.Count <= initialWorkbookCount
        DoEvents  ' Allow Excel to process other events
        If Timer > startTime + maxWaitTime Then
            MsgBox "New workbook did not open within the expected time.", vbExclamation
            Exit Sub
        End If
    Loop
    
    ' The new workbook is now the last one added
    Set NewWorkbook = Application.Workbooks(Application.Workbooks.Count)
    ' Activate the new workbook
    NewWorkbook.Activate









NewWorkbook.Sheets("data").Range("$A$1:$A$2").Copy
    ws.Activate
    
    Sheets("datval").Select
    NewWorkbook.Activate
    NewWorkbook.Sheets("data").Range("$A$1:$A$2").Copy
    ActiveSheet.Paste
    Sheets("datval").Visible = False
Sheets("Email").Select
    Application.CutCopyMode = False
    NewWorkbook.Close SaveChanges:=False
    
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
session.findById("wnd[0]/tbar[0]/btn[3]").press
'add newsheet closing command
End Sub


Sub SendEmailWithFormattedTable()

    Dim OutlookApp As Object
    Dim OutlookMail As Object
    Dim wsEmail As Worksheet, wsTable As Worksheet
    Dim cell As Range
    Dim emailBody As String
    Dim tableHtml As String
    Dim tableRange As Range
    Dim lastRow As Long
    Dim i As Long, j As Long
    
    ' Set worksheets
    Set wsEmail = ThisWorkbook.Sheets("Email")
    Set wsTable = ThisWorkbook.Sheets("OP")
    
    ' Locate the last row in the "OP" sheet
    lastRow = wsTable.Cells(wsTable.Rows.Count, "A").End(xlUp).Row
    If lastRow >= 3 Then
        Set tableRange = wsTable.Range("A3:J" & lastRow)
        
        ' Start HTML for the table
        tableHtml = "<table border='1' style='border-collapse:collapse; font-family:Arial; font-size:12px;'>"
        
        ' Add headers if needed (assumes headers in row 2)
        tableHtml = tableHtml & "<tr style='background-color:#f2f2f2;'>"
        For j = 1 To tableRange.Columns.Count
            tableHtml = tableHtml & "<th style='padding:5px;'>" & wsTable.Cells(2, j).Value & "</th>"
        Next j
        tableHtml = tableHtml & "</tr>"
        
        ' Add rows dynamically
        For i = 1 To tableRange.Rows.Count
            tableHtml = tableHtml & "<tr>"
            For j = 1 To tableRange.Columns.Count
                tableHtml = tableHtml & "<td style='padding:5px;'>" & tableRange.Cells(i, j).Value & "</td>"
            Next j
            tableHtml = tableHtml & "</tr>"
        Next i
        
        tableHtml = tableHtml & "</table>"
    Else
        tableHtml = "<p>No table data found.</p>"
    End If
    
    ' Construct the email body
    emailBody = "<html><body>"
    emailBody = emailBody
    
    ' Add paragraphs from D2:D10
    For Each cell In wsEmail.Range("D3:D100")
        If cell.Value <> "" Then
            emailBody = emailBody & "<p>" & cell.Value & "</p>"
        End If
    Next cell
    
    ' Append the HTML table to the email body
    emailBody = emailBody & tableHtml
    emailBody = emailBody & "<p>Best regards,<br>Your Name</p>"
    emailBody = emailBody & "</body></html>"
    
    ' Initialize Outlook application
    Set OutlookApp = CreateObject("Outlook.Application")
    Set OutlookMail = OutlookApp.CreateItem(0)
    
    ' Configure the email
    With OutlookMail
        .To = ThisWorkbook.Sheets("Email").Range("A2").Value
        .subject = ThisWorkbook.Sheets("Email").Range("C2").Value
        .HTMLBody = emailBody
        .Display ' Use .Send to send directly
    End With
    
    ' Clean up
    Set OutlookMail = Nothing
    Set OutlookApp = Nothing

End Sub

Sub SendEmailWithFormattedTableExcludingRows1And2()

    Dim OutlookApp As Object
    Dim OutlookMail As Object
    Dim wsEmail As Worksheet, wsTable As Worksheet
    Dim cell As Range
    Dim emailBody As String
    Dim tableHtml As String
    Dim tableRange As Range
    Dim lastRow As Long
    Dim i As Long, j As Long
    
    ' Set worksheets
    Set wsEmail = ThisWorkbook.Sheets("Email")
    Set wsTable = ThisWorkbook.Sheets("OP")
    
    ' Locate the last row in the "OP" sheet
    lastRow = wsTable.Cells(wsTable.Rows.Count, "A").End(xlUp).Row
    If lastRow >= 3 Then
        ' Define the range from A3 to H(lastRow), excluding rows 1 and 2
        Set tableRange = wsTable.Range("A3:J" & lastRow)
        
        ' Start HTML for the table
        tableHtml = "<table border='1' style='border-collapse:collapse; font-family:Arial; font-size:12px;'>"
        
        ' Add rows dynamically
        For i = 1 To tableRange.Rows.Count
            tableHtml = tableHtml & "<tr>"
            For j = 1 To tableRange.Columns.Count
                tableHtml = tableHtml & "<td style='padding:5px;'>" & tableRange.Cells(i, j).Value & "</td>"
            Next j
            tableHtml = tableHtml & "</tr>"
        Next i
        
        tableHtml = tableHtml & "</table>"
    Else
        tableHtml = "<p>No table data found.</p>"
    End If
    
    ' Construct the email body
    emailBody = "<html><body>"
    emailBody = emailBody
    
    ' Add paragraphs from D2:D10
    For Each cell In wsEmail.Range("D2:D10")
        If cell.Value <> "" Then
            emailBody = emailBody & "<p>" & cell.Value & "</p>"
        End If
    Next cell
    
    ' Append the HTML table to the email body
    emailBody = emailBody & tableHtml
    emailBody = emailBody
    emailBody = emailBody & "</body></html>"
    
    ' Initialize Outlook application
    Set OutlookApp = CreateObject("Outlook.Application")
    Set OutlookMail = OutlookApp.CreateItem(0)
    
    ' Configure the email
    With OutlookMail
        .To = ThisWorkbook.Sheets("Email").Range("A2").Value
        .subject = ThisWorkbook.Sheets("Email").Range("C2").Value
        .HTMLBody = emailBody
        .Display ' Use .Send to send directly
    End With
    
    ' Clean up
    Set OutlookMail = Nothing
    Set OutlookApp = Nothing

End Sub

